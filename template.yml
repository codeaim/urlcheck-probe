AWSTemplateFormatVersion: '2010-09-09'
Description: Provision AWS CloudWatch events, AWS SNS subjects and AWS Lambda functions to preform url monitoring
Parameters:
  S3BucketParameter: {Description: Enter S3 bucket name., Type: String}
  ApiUrlParameter: {Description: Enter urlcheck api url., Type: String}
  ChunkSizeParameter: {Description: Enter acquire check chunk size., Default: 25, Type: Number}
Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com, sns.amazonaws.com]
        Version: '2012-10-17'
      ManagedPolicyArns: ['arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole']
      Path: /
  LambdaExecutionPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: LambdaPublishSNS
        Roles:
          - Ref: LambdaExecutionRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: ['sns:Publish']
              Resource: '*'
  FunctionCheckProbe:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: {Ref: S3BucketParameter}
        S3Key: deploy.zip
      Environment:
        Variables:
          API_URL: {Ref: ApiUrlParameter}
      FunctionName:
        Fn::Join:
          - ''
          - - Ref: S3BucketParameter
            - '-check-probe'
      Handler: src/checkProbe.handler
      MemorySize: 128
      Role:
        Fn::GetAtt: [LambdaExecutionRole, Arn]
      Runtime: nodejs6.10
      Timeout: 20
  TopicChecks:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint:
            Fn::GetAtt: [FunctionCheckProbe, Arn]
          Protocol: lambda
      TopicName:
        Fn::Join:
          - ''
          - - Ref: S3BucketParameter
            - '-acquired-checks'
  LambdaTopicChecksInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: {Ref: TopicChecks}
      FunctionName:
        Fn::GetAtt: [FunctionCheckProbe, Arn]
  FunctionCheckAcquire:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: {Ref: S3BucketParameter}
        S3Key: deploy.zip
      Environment:
        Variables:
          API_URL: {Ref: ApiUrlParameter}
          CHUNK_SIZE: {Ref: ChunkSizeParameter}
          CHECKS_TOPIC: {Ref: TopicChecks}
      FunctionName:
        Fn::Join:
          - ''
          - - Ref: S3BucketParameter
            - '-check-acquire'
      Handler: src/checkAcquire.handler
      MemorySize: 128
      Role:
        Fn::GetAtt: [LambdaExecutionRole, Arn]
      Runtime: nodejs6.10
      Timeout: 20
  RuleScheduleCheckAcquire:
    Type: AWS::Events::Rule
    Properties:
      Name:
        Fn::Join:
          - ''
          - - Ref: S3BucketParameter
            - '-check-acquire-scheduler'
      ScheduleExpression: rate(1 minute)
      Targets:
        - Arn:
            Fn::GetAtt: [FunctionCheckAcquire, Arn]
          Id:
            Fn::Join:
              - ''
              - - Ref: S3BucketParameter
                - '-check-acquire-scheduler'
  InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt: [FunctionCheckAcquire, Arn]
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt: [RuleScheduleCheckAcquire, Arn]
    
